// @flow

/**
 * builtin
 */
import React from 'react';

/**
 * External
 */
import { Input } from 'antd';

/**
 * internal library
 */


import config from './TextInput.component.config';
import type { Props } from './TextInput.component.types';

import './TextInput.component.style.css';


/**
 * @param {string} check - check contain value on input
 * @returns {React.Node} - return error if no input
 */
const showError = (check: string) => (
  (!check ? <div style={{ color: 'red', fontSize: '14px' }}>Cannot Be Emptied</div> : '')
);


/**
 *
 * @param {*} props - props
 * @returns {React.Node} - node
 */
const _renderInput = (props: Props): React.Node => (
  <>
    <div style={{ color: 'black', fontSize: '14px' }}>
      {`${props.label} ${props.required ? <span style={{ color: 'red' }}>f</span> : ''}`}
    </div>
    <Input
      value={props.value}
      placeholder={props.placeholder}
      style={
      { borderColor: props.value ? 'red !important' : null,
        ':focus, :hover': { borderColor: props.value ? 'red !important' : null } }}
      onChange={props.onChange}
    />
    {showError(props.value)}
  </>
);

/**
 * @param { Props } props - this is a prop types
 * @returns {React.Node} text input
 */
const TextInput = (props: Props): React.Node =>
 (
   <div style={
   {
     width: '50%',
   }}
   >
     {_renderInput(props)}
   </div>
  );


TextInput.defaultProps = config.defaultProps;

export default TextInput;
