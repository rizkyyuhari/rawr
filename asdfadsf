import { useCallback, useState } from 'react';
import axios from 'axios';
import { useFocusEffect } from '@react-navigation/native';
import EncryptedStorage from 'react-native-encrypted-storage';

const useAxiosGet = (url, navigation) => {
  const [data, setData] = useState();
  const [error, setError] = useState();
  const [isLoading, setIsLoading] = useState(true);

  const fetchData = useCallback(async () => {
    const token = await EncryptedStorage.getItem('token');

    const headers = {
      Authorization: `Bearer ${token}`
    };

    try {
      setIsLoading(true);
      const response = await axios.get(url, { headers });

      setData(response.data);
    } catch (errorFetch) {
      if (errorFetch?.response?.data?.message === 'Invalid Token') {
        await EncryptedStorage.removeItem('token');
        navigation.replace('Login');
      }
      setError(errorFetch);
    } finally {
      setIsLoading(false);
    }
  }, [url, navigation]);

  useFocusEffect(
    useCallback(() => {
      fetchData();
    }, [fetchData])
  );

  return {
    data,
    error,
    isLoading,
    fetchData
  };
};

export default useAxiosGet;
