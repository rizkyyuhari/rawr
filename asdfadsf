app.js saya seperti ini :
// @flow

import * as React from 'react';


import './App.css';
import TextInput from './Components/TextInputComponent/TextInput.component';


/**
 * first time app to render, will call this function
 *
 * @returns {React.Node} React Node
 */
const App = (): React.Node => {
  const [email, setEmail] = React.useState('');


  /**
   * @param {SyntheticInputEvent} event  - fa
   * @return {void} -asdf
   */
  const handleEmailChange = (event: SyntheticInputEvent<HTMLInputElement>) => {
    setEmail(event.target.value);
  };

  return (
    <div className="App">
      <header className="App-header">
        <TextInput
          label="Username"
          placeholder="Username"
          onChange={handleEmailChange}
          value={email}
          required
        />
      </header>
    </div>
  );
};

export default App;
TextInput component saya seperti ini : // @flow

import React from 'react';
import { useState } from 'react';

import { Input } from 'antd';

import config from './TextInput.component.config';
import type { Props } from './TextInput.component.types';


/**
 * @param {boolean} error - check contain value on input
 * @param {string} label - to show label on the error message
 * @returns {React.Node} - return error if no input
 */
const showErrorMessage = (error: boolean, label: string) => (
  (error ?
    <div className="text-red-500 text-14px">{`${label} Cannot be Empty`}</div>
  : '')
);


/**
 *
 * @param {*} error - to check if the input error or not
 * @returns {string} - to give border color red style when error
 */
export const _inputBorderColor = (error: boolean) => {
  if (error) {
    return 'border-tp-red';
  }

  return '';
};


/**
 *
 * @param {*} props - props
 * @returns {React.Node} - node
 */
const _renderInput = (props: Props): React.Node => {
  const [error, setError] = useState(false);

  /**
   * @returns {void} - changing error state
   */
  const onBlur = (): void => {
    if (!props.value) {
      return setError(true);
    }

    return setError(false);
  };

  const errorBorderColor = error && props.required;

  return (
    <>
      <div className="text-14px">
        {`${props.label}`}
        {props.required && <span className="text-red-500">*</span>}
      </div>
      <Input
        value={props.value}
        placeholder={props.placeholder}
        className={_inputBorderColor(errorBorderColor)}
        onChange={props.onChange}
        onBlur={onBlur}
        maxLength={props.maxLength}
        disabled={props.disabled}
      />
      {props.required && showErrorMessage(error, props.label)}
    </>
  );
};

/**
 * @param { Props } props - this is a prop types
 * @returns {React.Node} text input
 */
const TextInput = (props: Props): React.Node =>
 (
   <div className="w-3/12 flex flex-col items-start">
     {_renderInput(props)}
   </div>
  );


TextInput.defaultProps = config.defaultProps;

export default TextInput;
Text input component config begini :// @flow

const defaultProps = {
  required: false,
  disabled: false,
  maxLength: 30,
};

export default {
  defaultProps,
};

text input type begini :
// @flow

export type Props = {
    label: string,
    placeholder: string,
    value: string,
    onChange: () => void,
    required?: boolean,
    disabled?: boolean,
    maxLength?: number
}

lalu mengapa ada error eslint pada saat memanggil component TextINput di app.js errornya adalah pada onChange, cannot create `TextInput` element because
function [1] requires another argument from function type [2] in property onChange
